---
apiVersion: v1
kind: Namespace
metadata:
  name: redis-cluster

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-cluster
  namespace: redis-cluster
  labels:
    app: redis-cluster
type: Opaque
data:
  redis-password: "ZnN0N085WWhubGR1MnpxUVFaU0dtYkRDSmZ4N2tPCg=="
# fst7O9Yhnldu2zqQQZSGmbDCJfx7kO

---
apiVersion: redis.redis.opstreelabs.in/v1beta1
kind: RedisCluster
metadata:
  name: redis-cluster
  namespace: redis-cluster
spec:
  clusterSize: 3
  kubernetesConfig:
    image: 'quay.io/opstree/redis:v6.2.5'
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 101m
        memory: 128Mi
      limits:
        cpu: 101m
        memory: 128Mi
    redisSecret:
      name: "redis-cluster"
      key: "redis-password"
  redisExporter:
    enabled: true
    image: 'quay.io/opstree/redis-exporter:1.0'
    imagePullPolicy: Always
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 100m
        memory: 128Mi
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: redis-cluster
  labels:
    app: redis-cluster-leader
    argocd.argoproj.io/instance: app
    redis_setup_type: cluster
    role: leader
  annotations:
    redis.opstreelabs.in: "true"
    redis.opstreelabs.instance: redis-cluster
  ownerReferences:
  - apiVersion: redis.redis.opstreelabs.in/v1beta1
    controller: true
    kind: RedisCluster
    name: redis-clusterspec:
  type: ClusterIP
  selector:
    app: redis-cluster-leader
    redis_setup_type: cluster
    role: leader
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
      name: client
